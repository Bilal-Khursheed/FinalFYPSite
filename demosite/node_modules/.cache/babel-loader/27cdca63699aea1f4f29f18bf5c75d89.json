{"ast":null,"code":"'use strict';\n\nvar utils = require('../utils');\n\nvar add = require('./add');\n\nvar parse = require('./parse'); // exported\n\n\nvar rules = {\n  ignore: [],\n  watch: []\n};\n/**\n * Loads a nodemon config file and populates the ignore\n * and watch rules with it's contents, and calls callback\n * with the new rules\n *\n * @param  {String} filename\n * @param  {Function} callback\n */\n\nfunction load(filename, callback) {\n  parse(filename, function (err, result) {\n    if (err) {\n      // we should have bombed already, but\n      utils.log.error(err);\n      callback(err);\n    }\n\n    if (result.raw) {\n      result.raw.forEach(add.bind(null, rules, 'ignore'));\n    } else {\n      result.ignore.forEach(add.bind(null, rules, 'ignore'));\n      result.watch.forEach(add.bind(null, rules, 'watch'));\n    }\n\n    callback(null, rules);\n  });\n}\n\nmodule.exports = {\n  reset: function () {\n    // just used for testing\n    rules.ignore.length = rules.watch.length = 0;\n    delete rules.ignore.re;\n    delete rules.watch.re;\n  },\n  load: load,\n  ignore: {\n    test: add.bind(null, rules, 'ignore'),\n    add: add.bind(null, rules, 'ignore')\n  },\n  watch: {\n    test: add.bind(null, rules, 'watch'),\n    add: add.bind(null, rules, 'watch')\n  },\n  add: add.bind(null, rules),\n  rules: rules\n};","map":null,"metadata":{},"sourceType":"script"}