{"ast":null,"code":"class GetAllDoc {\n  async allDoc() {\n    var allData, user;\n    var name = [];\n    await fetch(\"users/alldoctors\").then(respone => respone.json()).then(Result => {\n      var alldoctors = JSON.stringify(Result.data);\n      var // name=[],\n      email = [],\n          cnic = [],\n          address = [];\n      var i,\n          j = 0;\n\n      for (i in Result.data) {\n        name[j] = Result.data[i].fname;\n        name[j] += \" \" + Result.data[i].lname;\n        email[j] = Result.data[i].email;\n        cnic[j] = Result.data[i].cnic; //address = Result.data[i].adress;\n\n        console.log(name[j], email[j], cnic[j]);\n        j++;\n      }\n\n      user = {\n        names: name,\n        emails: email,\n        cnic: cnic\n      }; //console.log(\"obj value\" + user.email[1]);\n      //allData = Result;\n    });\n    console.log(\"here is all datajosaboif\" + name[1]);\n    return user;\n  }\n\n}\n\nexport default new GetAllDoc();","map":{"version":3,"sources":["C:/Users/DELL/Desktop/React Work/yfp v3/demoProject/demosite/src/componets/doctorData/GetAllDoc.js"],"names":["GetAllDoc","allDoc","allData","user","name","fetch","then","respone","json","Result","alldoctors","JSON","stringify","data","email","cnic","address","i","j","fname","lname","console","log","names","emails"],"mappings":"AAAA,MAAMA,SAAN,CAAgB;AACd,QAAMC,MAAN,GAAe;AACb,QAAIC,OAAJ,EAAaC,IAAb;AACA,QAAIC,IAAI,GAAC,EAAT;AAEA,UAAMC,KAAK,oBAAL,CACHC,IADG,CACGC,OAAD,IAAaA,OAAO,CAACC,IAAR,EADf,EAEHF,IAFG,CAEGG,MAAD,IAAY;AACd,UAAIC,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeH,MAAM,CAACI,IAAtB,CAAjB;AACF,UAAG;AACDC,MAAAA,KAAK,GAAC,EADR;AAAA,UAEEC,IAAI,GAAC,EAFP;AAAA,UAGEC,OAAO,GAAG,EAHZ;AAIA,UAAIC,CAAJ;AAAA,UACEC,CAAC,GAAG,CADN;;AAEA,WAAKD,CAAL,IAAUR,MAAM,CAACI,IAAjB,EAAuB;AACrBT,QAAAA,IAAI,CAACc,CAAD,CAAJ,GAAUT,MAAM,CAACI,IAAP,CAAYI,CAAZ,EAAeE,KAAzB;AACAf,QAAAA,IAAI,CAACc,CAAD,CAAJ,IAAW,MAAMT,MAAM,CAACI,IAAP,CAAYI,CAAZ,EAAeG,KAAhC;AACAN,QAAAA,KAAK,CAACI,CAAD,CAAL,GAAWT,MAAM,CAACI,IAAP,CAAYI,CAAZ,EAAeH,KAA1B;AACAC,QAAAA,IAAI,CAACG,CAAD,CAAJ,GAAUT,MAAM,CAACI,IAAP,CAAYI,CAAZ,EAAeF,IAAzB,CAJqB,CAKrB;;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAI,CAACc,CAAD,CAAhB,EAAqBJ,KAAK,CAACI,CAAD,CAA1B,EAA+BH,IAAI,CAACG,CAAD,CAAnC;AACAA,QAAAA,CAAC;AACF;;AACDf,MAAAA,IAAI,GAAC;AACDoB,QAAAA,KAAK,EAACnB,IADL;AAEDoB,QAAAA,MAAM,EAACV,KAFN;AAGDC,QAAAA,IAAI,EAACA;AAHJ,OAAL,CAjBgB,CAuBhB;AAEA;AACD,KA5BG,CAAN;AA6BAM,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAA4BlB,IAAI,CAAC,CAAD,CAA5C;AACA,WAAOD,IAAP;AACD;;AApCa;;AAuChB,eAAe,IAAIH,SAAJ,EAAf","sourcesContent":["class GetAllDoc {\r\n  async allDoc() {\r\n    var allData, user;\r\n    var name=[];\r\n\r\n    await fetch(`users/alldoctors`)\r\n      .then((respone) => respone.json())\r\n      .then((Result) => {\r\n          var alldoctors = JSON.stringify(Result.data);\r\n        var// name=[],\r\n          email=[],\r\n          cnic=[],\r\n          address = [];\r\n        var i,\r\n          j = 0;\r\n        for (i in Result.data) {\r\n          name[j] = Result.data[i].fname;\r\n          name[j] += \" \" + Result.data[i].lname;\r\n          email[j] = Result.data[i].email;\r\n          cnic[j] = Result.data[i].cnic;\r\n          //address = Result.data[i].adress;\r\n          console.log(name[j], email[j], cnic[j]);\r\n          j++;\r\n        }\r\n        user={\r\n            names:name,\r\n            emails:email,\r\n            cnic:cnic\r\n        }\r\n        \r\n        //console.log(\"obj value\" + user.email[1]);\r\n\r\n        //allData = Result;\r\n      });\r\n    console.log(\"here is all datajosaboif\" +name[1]);\r\n    return user;\r\n  }\r\n}\r\n\r\nexport default new GetAllDoc();\r\n"]},"metadata":{},"sourceType":"module"}