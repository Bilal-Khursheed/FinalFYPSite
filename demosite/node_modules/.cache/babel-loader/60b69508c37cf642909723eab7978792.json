{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\React Work\\\\demoProject\\\\demosite\\\\src\\\\PDFworking\\\\pdfreport.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport pic from \"../componets/assests/img/team/1.jpg\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass Report extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navigate: false\n    };\n  }\n\n  printDocument() {\n    // setTimeout(() => this.setState({ navigate: true }), 20);\n    const input = document.getElementById(\"output\");\n    html2canvas(input, {\n      quality: 1,\n      scale: 1\n    }).then(canvas => {\n      const imgData = canvas.toDataURL(\"image/png\"); // window.open(pdf.output(\"bloburl\"), \"Loading\");\n\n      const pdf = new jsPDF({\n        quality: 1,\n        scale: 1,\n        orientation: \"landscape\"\n      });\n      const pdfWidth = pdf.internal.pageSize.getWidth();\n      const imgProps = pdf.getImageProperties(imgData);\n      const pdfHeight = imgProps.height * pdfWidth / imgProps.width;\n      pdf.addImage(imgData, \"Jpeg\", 0, 0, pdfWidth, pdfHeight);\n      window.open(pdf.output(\"bloburl\"), \"Loading\");\n      pdf.save(\"test.pdf\");\n    });\n    /*\r\n    const input = document.getElementById(\"output\");\r\n    html2canvas(input).then((canvas) => {\r\n      var imgWidth = 200;\r\n      var pageHeight = 290;\r\n      var imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n      var heightLeft = imgHeight;\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n      var position = 0;\r\n      var heightLeft = imgHeight;\r\n      pdf.addImage(imgData, \"JPEG\", 0, position, imgWidth, imgHeight);\r\n      pdf.save(\"download.pdf\");\r\n    });\r\n        /*\r\n    var doc = new jsPDF(\"p\", \"pt\");\r\n      doc.text(20, 20, \"This is the first title.\");\r\n      doc.setFont(\"helvetica\");\r\n    doc.setFontType(\"normal\");\r\n    doc.text(20, 60, \"This is the second title.\");\r\n      doc.setFont(\"helvetica\");\r\n    doc.setFontType(\"normal\");\r\n    doc.text(20, 100, \"This is the thrid title.\");\r\n      doc.save(\"demo.pdf\");*/\n  }\n\n  render() {\n    if (this.state.navigate) {\n      return React.createElement(Redirect, {\n        to: \"/doctorportal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }\n\n    setTimeout(() => this.setState({\n      navigate: true\n    }), 20);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"]\\\\\");\n  }\n\n}\n\nexport default Report;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/React Work/demoProject/demosite/src/PDFworking/pdfreport.js"],"names":["React","Component","axios","jsPDF","html2canvas","pic","Link","Redirect","Report","constructor","props","state","navigate","printDocument","input","document","getElementById","quality","scale","then","canvas","imgData","toDataURL","pdf","orientation","pdfWidth","internal","pageSize","getWidth","imgProps","getImageProperties","pdfHeight","height","width","addImage","window","open","output","save","render","setTimeout","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,qCAAhB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAC7BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AACDC,EAAAA,aAAa,GAAG;AACd;AACA,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAd;AAEAZ,IAAAA,WAAW,CAACU,KAAD,EAAQ;AAAEG,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAAR,CAAX,CAA6CC,IAA7C,CAAmDC,MAAD,IAAY;AAC5D,YAAMC,OAAO,GAAGD,MAAM,CAACE,SAAP,CAAiB,WAAjB,CAAhB,CAD4D,CAE5D;;AACA,YAAMC,GAAG,GAAG,IAAIpB,KAAJ,CAAU;AAAEc,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,KAAK,EAAE,CAArB;AAAwBM,QAAAA,WAAW,EAAE;AAArC,OAAV,CAAZ;AACA,YAAMC,QAAQ,GAAGF,GAAG,CAACG,QAAJ,CAAaC,QAAb,CAAsBC,QAAtB,EAAjB;AACA,YAAMC,QAAQ,GAAGN,GAAG,CAACO,kBAAJ,CAAuBT,OAAvB,CAAjB;AACA,YAAMU,SAAS,GAAIF,QAAQ,CAACG,MAAT,GAAkBP,QAAnB,GAA+BI,QAAQ,CAACI,KAA1D;AACAV,MAAAA,GAAG,CAACW,QAAJ,CAAab,OAAb,EAAsB,MAAtB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoCI,QAApC,EAA8CM,SAA9C;AACAI,MAAAA,MAAM,CAACC,IAAP,CAAYb,GAAG,CAACc,MAAJ,CAAW,SAAX,CAAZ,EAAmC,SAAnC;AACAd,MAAAA,GAAG,CAACe,IAAJ,CAAS,UAAT;AACD,KAVD;AAYA;;;;;;;;;;;;;;;;;;;;;;;;AA4BD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAK5B,KAAL,CAAWC,QAAf,EAAyB;AACvB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD4B,IAAAA,UAAU,CAAC,MAAM,KAAKC,QAAL,CAAc;AAAE7B,MAAAA,QAAQ,EAAE;AAAZ,KAAd,CAAP,EAA0C,EAA1C,CAAV;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAYD;;AAtE4B;;AAwE/B,eAAeJ,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\nimport pic from \"../componets/assests/img/team/1.jpg\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nclass Report extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      navigate: false,\r\n    };\r\n  }\r\n  printDocument() {\r\n    // setTimeout(() => this.setState({ navigate: true }), 20);\r\n    const input = document.getElementById(\"output\");\r\n\r\n    html2canvas(input, { quality: 1, scale: 1 }).then((canvas) => {\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      // window.open(pdf.output(\"bloburl\"), \"Loading\");\r\n      const pdf = new jsPDF({ quality: 1, scale: 1, orientation: \"landscape\" });\r\n      const pdfWidth = pdf.internal.pageSize.getWidth();\r\n      const imgProps = pdf.getImageProperties(imgData);\r\n      const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\r\n      pdf.addImage(imgData, \"Jpeg\", 0, 0, pdfWidth, pdfHeight);\r\n      window.open(pdf.output(\"bloburl\"), \"Loading\");\r\n      pdf.save(\"test.pdf\");\r\n    });\r\n\r\n    /*\r\n    const input = document.getElementById(\"output\");\r\n    html2canvas(input).then((canvas) => {\r\n      var imgWidth = 200;\r\n      var pageHeight = 290;\r\n      var imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n      var heightLeft = imgHeight;\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n      var position = 0;\r\n      var heightLeft = imgHeight;\r\n      pdf.addImage(imgData, \"JPEG\", 0, position, imgWidth, imgHeight);\r\n      pdf.save(\"download.pdf\");\r\n    });\r\n        /*\r\n    var doc = new jsPDF(\"p\", \"pt\");\r\n\r\n    doc.text(20, 20, \"This is the first title.\");\r\n\r\n    doc.setFont(\"helvetica\");\r\n    doc.setFontType(\"normal\");\r\n    doc.text(20, 60, \"This is the second title.\");\r\n\r\n    doc.setFont(\"helvetica\");\r\n    doc.setFontType(\"normal\");\r\n    doc.text(20, 100, \"This is the thrid title.\");\r\n\r\n    doc.save(\"demo.pdf\");*/\r\n  }\r\n\r\n  render() {\r\n    if (this.state.navigate) {\r\n      return <Redirect to=\"/doctorportal\" />;\r\n    }\r\n    setTimeout(() => this.setState({ navigate: true }), 20);\r\n    return (\r\n      <div>\r\n]\\\r\n\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\nexport default Report;\r\n"]},"metadata":{},"sourceType":"module"}