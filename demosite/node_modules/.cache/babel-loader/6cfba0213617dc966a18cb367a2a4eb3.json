{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\DELL\\\\Desktop\\\\React Work\\\\React\\\\demoProject\\\\demosite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\React Work\\\\React\\\\demoProject\\\\demosite\\\\src\\\\componets\\\\Common\\\\privateRoute\\\\privateRoutes.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { islogin } from './'; //./componets/Pages/Login\"\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return (// Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    React.createElement(Route, Object.assign({}, rest, {\n      render: props => islogin() ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }))\n  );\n};\n\nexport default PrivateRoute;\n/*import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport isEmpty from \"./isEmpty\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => {\r\n  let route =\r\n    (auth.isAuthenticated &&\r\n      !isEmpty(auth.user) &&\r\n      !isEmpty(auth.user.organisation_id)) ||\r\n    (auth.isAuthenticated && rest.path === \"/admin\") ? (\r\n      <Component {...rest} />\r\n    ) : auth.isAuthenticated && !isEmpty(auth.user) ? (\r\n      <Redirect to=\"/admin\" />\r\n    ) : (\r\n      <Redirect to=\"/\" />\r\n    );\r\n  return <Route {...rest} render={(props) => route} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(PrivateRoute);\r\n*/","map":{"version":3,"sources":["C:/Users/DELL/Desktop/React Work/React/demoProject/demosite/src/componets/Common/privateRoute/privateRoutes.js"],"names":["React","Route","Redirect","islogin","PrivateRoute","Component","component","rest","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,IAAxB,C,CACA;;AACA,MAAMC,YAAY,GAAG,UAAqC;AAAA,MAAxBC,SAAwB,QAAnCC,SAAmC;AAAA,MAAVC,IAAU;;AACtD,SAEI;AACA;AACA,wBAAC,KAAD,oBAAWA,IAAX;AAAiB,MAAA,MAAM,EAAEC,KAAK,IAC1BL,OAAO,KACH,oBAAC,SAAD,oBAAeK,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADG,GAEL,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAUH,CAXD;;AAaA,eAAeJ,YAAf;AAEA","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { islogin } from './';\r\n//./componets/Pages/Login\"\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            islogin() ?\r\n                <Component {...props} />\r\n            : <Redirect to=\"/login\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n\r\n/*import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport isEmpty from \"./isEmpty\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => {\r\n  let route =\r\n    (auth.isAuthenticated &&\r\n      !isEmpty(auth.user) &&\r\n      !isEmpty(auth.user.organisation_id)) ||\r\n    (auth.isAuthenticated && rest.path === \"/admin\") ? (\r\n      <Component {...rest} />\r\n    ) : auth.isAuthenticated && !isEmpty(auth.user) ? (\r\n      <Redirect to=\"/admin\" />\r\n    ) : (\r\n      <Redirect to=\"/\" />\r\n    );\r\n  return <Route {...rest} render={(props) => route} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(PrivateRoute);\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}