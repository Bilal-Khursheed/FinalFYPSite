{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\React Work\\\\demoProject\\\\demosite\\\\src\\\\PDFworking\\\\pdfreport.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport pic from \"../componets/assests/img/team/1.jpg\";\n\nclass Report extends Component {\n  printDocument() {\n    const input = document.getElementById(\"output\");\n    html2canvas(input, {\n      quality: 1,\n      scale: 1\n    }).then(canvas => {\n      const imgData = canvas.toDataURL(\"image/png\");\n      const pdf = new jsPDF({\n        quality: 1,\n        scale: 1,\n        orientation: \"landscape\"\n      });\n      const pdfWidth = pdf.internal.pageSize.getWidth();\n      const imgProps = pdf.getImageProperties(imgData);\n      const pdfHeight = imgProps.height * pdfWidth / imgProps.width;\n      pdf.addImage(imgData, \"Jpeg\", 0, 0, pdfWidth, pdfHeight);\n      var string = pdf.output('datauristring');\n      var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\n      var x = window.open();\n      x.document.open();\n      x.document.write(embed);\n      x.document.close(); //pdf.save(\"test.pdf\");\n    });\n    /*\r\n    const input = document.getElementById(\"output\");\r\n    html2canvas(input).then((canvas) => {\r\n      var imgWidth = 200;\r\n      var pageHeight = 290;\r\n      var imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n      var heightLeft = imgHeight;\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n      var position = 0;\r\n      var heightLeft = imgHeight;\r\n      pdf.addImage(imgData, \"JPEG\", 0, position, imgWidth, imgHeight);\r\n      pdf.save(\"download.pdf\");\r\n    });\r\n        /*\r\n    var doc = new jsPDF(\"p\", \"pt\");\r\n      doc.text(20, 20, \"This is the first title.\");\r\n      doc.setFont(\"helvetica\");\r\n    doc.setFontType(\"normal\");\r\n    doc.text(20, 60, \"This is the second title.\");\r\n      doc.setFont(\"helvetica\");\r\n    doc.setFontType(\"normal\");\r\n    doc.text(20, 100, \"This is the thrid title.\");\r\n      doc.save(\"demo.pdf\");*/\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"click to load \"), React.createElement(\"button\", {\n      onClick: this.printDocument,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"click to download \")), React.createElement(\"div\", {\n      id: \"output\",\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        margin: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"MID SYSTEM\"), React.createElement(\"p\", {\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"heloo \"), React.createElement(\"img\", {\n      src: pic,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      style: {\n        fontSize: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"3\")))));\n  }\n\n}\n\nexport default Report;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/React Work/demoProject/demosite/src/PDFworking/pdfreport.js"],"names":["React","Component","axios","jsPDF","html2canvas","pic","Report","printDocument","input","document","getElementById","quality","scale","then","canvas","imgData","toDataURL","pdf","orientation","pdfWidth","internal","pageSize","getWidth","imgProps","getImageProperties","pdfHeight","height","width","addImage","string","output","embed","x","window","open","write","close","render","marginTop","color","textAlign","margin","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\nimport pic from \"../componets/assests/img/team/1.jpg\";\r\n\r\n\r\nclass Report extends Component {\r\n\r\n  printDocument() {\r\n    const input = document.getElementById(\"output\");\r\n    html2canvas(input, { quality: 1, scale: 1 }).then((canvas) => {\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF({ quality: 1, scale: 1, orientation: \"landscape\" });\r\n      const pdfWidth = pdf.internal.pageSize.getWidth();\r\n      const imgProps = pdf.getImageProperties(imgData);\r\n      const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\r\n      pdf.addImage(imgData, \"Jpeg\", 0, 0, pdfWidth, pdfHeight);\r\n      var string = pdf.output('datauristring');\r\n      var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\"\r\n      var x = window.open();\r\n      x.document.open();\r\n      x.document.write(embed);\r\n      x.document.close();\r\n      //pdf.save(\"test.pdf\");\r\n    });\r\n\r\n    /*\r\n    const input = document.getElementById(\"output\");\r\n    html2canvas(input).then((canvas) => {\r\n      var imgWidth = 200;\r\n      var pageHeight = 290;\r\n      var imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n      var heightLeft = imgHeight;\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n      var position = 0;\r\n      var heightLeft = imgHeight;\r\n      pdf.addImage(imgData, \"JPEG\", 0, position, imgWidth, imgHeight);\r\n      pdf.save(\"download.pdf\");\r\n    });\r\n        /*\r\n    var doc = new jsPDF(\"p\", \"pt\");\r\n\r\n    doc.text(20, 20, \"This is the first title.\");\r\n\r\n    doc.setFont(\"helvetica\");\r\n    doc.setFontType(\"normal\");\r\n    doc.text(20, 60, \"This is the second title.\");\r\n\r\n    doc.setFont(\"helvetica\");\r\n    doc.setFontType(\"normal\");\r\n    doc.text(20, 100, \"This is the thrid title.\");\r\n\r\n    doc.save(\"demo.pdf\");*/\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: \"200px\" }}>\r\n        <div>\r\n          <button>click to load </button>\r\n          <button onClick={this.printDocument}>click to download </button>\r\n        </div>\r\n        <div id=\"output\" style={{ color: \"black\" }}>\r\n          <h1 style={{ textAlign: \"center\", margin: \"10%\" }}>MID SYSTEM</h1>\r\n          <p style={{ color: \"black\" }}>heloo </p>\r\n          <img src={pic} />\r\n          <table style={{ fontSize: \"200px\" }}>\r\n            <tr>\r\n              <td>1</td>\r\n              <td>2</td>\r\n              <td>3</td>\r\n            </tr>\r\n            <tr>\r\n              <td>1</td>\r\n              <td>2</td>\r\n              <td>3</td>\r\n            </tr>\r\n            <tr>\r\n              <td>1</td>\r\n              <td>2</td>\r\n              <td>3</td>\r\n            </tr>\r\n            <tr>\r\n              <td>1</td>\r\n              <td>2</td>\r\n              <td>3</td>\r\n            </tr>\r\n            <tr>\r\n              <td>1</td>\r\n              <td>2</td>\r\n              <td>3</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Report;\r\n"]},"metadata":{},"sourceType":"module"}