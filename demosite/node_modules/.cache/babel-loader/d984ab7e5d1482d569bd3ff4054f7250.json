{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\React\\\\demoProject\\\\demosite\\\\src\\\\PDFworking\\\\Reportpdf.js\";\nimport React from \"react\";\nimport { Page, Text, View, Document, StyleSheet, PDFDownloadLink } from \"@react-pdf/renderer\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\n\nfunction Reportpdf() {\n  const pdfstyle = {\n    width: 90\n  };\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"hello there\"), React.createElement(PDFDownloadLink, {\n    document: React.createElement(Mydoc, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }),\n    fileName: \"sample.pdf\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, ({\n    bolb,\n    url,\n    loading,\n    error\n  }) => loading ? \"Loading Document....\" : \"Download Now!\")), React.createElement(PDFViewer, {\n    style: pdfstyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Mydoc, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n} // Create styles\n\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: \"tomato\"\n  },\n  section: {\n    color: \"white\",\n    textAlign: \"center\",\n    margin: 30,\n    width: 200,\n    \"@media max-width: 400\": {\n      width: 300\n    },\n    \"@media orientation: landscape\": {\n      width: 400\n    }\n  }\n}); // Create Document Component\n\nconst Mydoc = () => React.createElement(Document, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, React.createElement(Page, {\n  size: \"A4\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, React.createElement(View, {\n  className: \"section\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, \"Medical Imaging Diagonistic System Report\")), React.createElement(View, {\n  className: \"section\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}, \"This is a sample report that is generated by MID\")), React.createElement(View, {\n  className: \"section\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, \"This will produce a PDF document with a single page. Inside, two different blocks, each of them rendering a different text. These are not the only valid primitives you can use. Please refer to the Components or Examples sections for more information.\")), React.createElement(View, {\n  className: \"section\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, \"This will produce a PDF document with a single page. Inside, two different blocks, each of them rendering a different text. These are not the only valid primitives you can use. Please refer to the Components or Examples sections for more information.\")), React.createElement(View, {\n  className: \"section\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}, React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}, \"This will produce a PDF document with a single page. Inside, two different blocks, each of them rendering a different text. These are not the only valid primitives you can use. Please refer to the Components or Examples sections for more information.\")), React.createElement(View, {\n  className: \"section\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}, React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n}, \"This will produce a PDF document with a single page. Inside, two different blocks, each of them rendering a different text. These are not the only valid primitives you can use. Please refer to the Components or Examples sections for more information.\")), React.createElement(View, {\n  className: \"section\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}, \"This will produce a PDF document with a single page. Inside, two different blocks, each of them rendering a different text. These are not the only valid primitives you can use. Please refer to the Components or Examples sections for more information.\"))));\n\nexport default Reportpdf;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/React/demoProject/demosite/src/PDFworking/Reportpdf.js"],"names":["React","Page","Text","View","Document","StyleSheet","PDFDownloadLink","PDFViewer","Reportpdf","pdfstyle","width","bolb","url","loading","error","styles","create","page","backgroundColor","section","color","textAlign","margin","Mydoc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,IADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,UALF,EAMEC,eANF,QAOO,qBAPP;AAQA,SAASC,SAAT,QAA0B,qBAA1B;;AAGA,SAASC,SAAT,GAAqB;AACnB,QAAMC,QAAQ,GAChB;AACEC,IAAAA,KAAK,EAAE;AADT,GADE;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B;AAAsC,IAAA,QAAQ,EAAC,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,GAAD,KACCD,OAAO,GAAG,sBAAH,GAA4B,eAFvC,CAFF,CADF,EASE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEJ,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,CADF;AAeD,C,CAAC;;;AACF,MAAMM,MAAM,GAAGV,UAAU,CAACW,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,eAAe,EAAE;AAAnB,GADyB;AAG/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,OADA;AAEPC,IAAAA,SAAS,EAAE,QAFJ;AAGPC,IAAAA,MAAM,EAAE,EAHD;AAIPZ,IAAAA,KAAK,EAAE,GAJA;AAKP,6BAAyB;AACvBA,MAAAA,KAAK,EAAE;AADgB,KALlB;AAQP,qCAAiC;AAC/BA,MAAAA,KAAK,EAAE;AADwB;AAR1B;AAHsB,CAAlB,CAAf,C,CAiBA;;AACA,MAAMa,KAAK,GAAG,MACZ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,CADF,EAIE,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADF,CAJF,EAOE,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gQADF,CAPF,EAeE,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gQADF,CAfF,EAuBE,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gQADF,CAvBF,EA+BE,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gQADF,CA/BF,EAuCE,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gQADF,CAvCF,CADF,CADF;;AAoDA,eAAef,SAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n  Page,\r\n  Text,\r\n  View,\r\n  Document,\r\n  StyleSheet,\r\n  PDFDownloadLink\r\n} from \"@react-pdf/renderer\";\r\nimport { PDFViewer } from \"@react-pdf/renderer\";\r\n\r\n\r\nfunction Reportpdf() {\r\n  const pdfstyle = \r\n{\r\n  width: 90 ,\r\n  \r\n}\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <h1>hello there</h1>\r\n        <PDFDownloadLink document={<Mydoc />} fileName=\"sample.pdf\">\r\n          {({ bolb, url, loading, error }) =>\r\n            loading ? \"Loading Document....\" : \"Download Now!\"\r\n          }\r\n        </PDFDownloadLink>\r\n      </div>\r\n      <PDFViewer style={pdfstyle}>\r\n        <Mydoc />\r\n      </PDFViewer>\r\n    </div>\r\n  );\r\n} // Create styles\r\nconst styles = StyleSheet.create({\r\n  page: { backgroundColor: \"tomato\" },\r\n\r\n  section: {\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    margin: 30,\r\n    width: 200,\r\n    \"@media max-width: 400\": {\r\n      width: 300\r\n    },\r\n    \"@media orientation: landscape\": {\r\n      width: 400\r\n    }\r\n  }\r\n});\r\n\r\n// Create Document Component\r\nconst Mydoc = () => (\r\n  <Document>\r\n    <Page size=\"A4\">\r\n      <View className=\"section\">\r\n        <Text>Medical Imaging Diagonistic System Report</Text>\r\n      </View>\r\n      <View className=\"section\">\r\n        <Text>This is a sample report that is generated by MID</Text>\r\n      </View>\r\n      <View className=\"section\">\r\n        <Text>\r\n          This will produce a PDF document with a single page. Inside, two\r\n          different blocks, each of them rendering a different text. These are\r\n          not the only valid primitives you can use. Please refer to the\r\n          Components or Examples sections for more information.\r\n        </Text>\r\n      </View>\r\n      <View className=\"section\">\r\n        <Text>\r\n          This will produce a PDF document with a single page. Inside, two\r\n          different blocks, each of them rendering a different text. These are\r\n          not the only valid primitives you can use. Please refer to the\r\n          Components or Examples sections for more information.\r\n        </Text>\r\n      </View>\r\n      <View className=\"section\">\r\n        <Text>\r\n          This will produce a PDF document with a single page. Inside, two\r\n          different blocks, each of them rendering a different text. These are\r\n          not the only valid primitives you can use. Please refer to the\r\n          Components or Examples sections for more information.\r\n        </Text>\r\n      </View>\r\n      <View className=\"section\">\r\n        <Text>\r\n          This will produce a PDF document with a single page. Inside, two\r\n          different blocks, each of them rendering a different text. These are\r\n          not the only valid primitives you can use. Please refer to the\r\n          Components or Examples sections for more information.\r\n        </Text>\r\n      </View>\r\n      <View className=\"section\">\r\n        <Text>\r\n          This will produce a PDF document with a single page. Inside, two\r\n          different blocks, each of them rendering a different text. These are\r\n          not the only valid primitives you can use. Please refer to the\r\n          Components or Examples sections for more information.\r\n        </Text>\r\n      </View>\r\n    </Page>\r\n  </Document>\r\n);\r\nexport default Reportpdf;\r\n"]},"metadata":{},"sourceType":"module"}