{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\DELL\\\\Desktop\\\\React Work\\\\demoProject\\\\demosite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\React Work\\\\demoProject\\\\demosite\\\\src\\\\componets\\\\Common\\\\privateRoute\\\\privateRoutes.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"../../auth/loginAuth\";\n\nconst ProtectedRoute = (_ref) => {\n  let cmp = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      localStorage.getItem(\"admin\") ? React.createElement(\"cmp\", Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }));\n};\n\nexport default ProtectedRoute;\n/*\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (auth.isAuthenticated()) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n*/","map":{"version":3,"sources":["C:/Users/DELL/Desktop/React Work/demoProject/demosite/src/componets/Common/privateRoute/privateRoutes.js"],"names":["React","Route","Redirect","auth","ProtectedRoute","cmp","component","rest","props","localStorage","getItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,OAAOC,IAAP,MAAiB,sBAAjB;;AACA,MAAMC,cAAc,GAAG;AAAA,MAAaC,GAAb,QAAGC,SAAH;AAAA,MAAqBC,IAArB;;AAAA,SACrB,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,IACE,6CAASF,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,GAGE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF;AAKD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADqB;AAAA,CAAvB;;AAaA,eAAeJ,cAAf;AACA","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport auth from \"../../auth/loginAuth\";\r\nconst ProtectedRoute = ({ component:cmp, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      localStorage.getItem(\"admin\") ? (\r\n        <cmp {...props} />\r\n      ) : \r\n        <Redirect to=\"/login\" />\r\n      \r\n    }}\r\n  />\r\n);\r\n\r\nexport default ProtectedRoute;\r\n/*\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (auth.isAuthenticated()) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}